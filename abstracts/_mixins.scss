// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// Do not edit. Put all site-specific mixins in site-mixins
// -----------------------------------------------------------------------------


//wrapper
@mixin wrapper{
  padding: 0 $mobile-padding;
  max-width: calc(100% - #{$mobile-padding*2} );
  width: 100%; /* 1 */
  margin-left: auto; /* 2 */
  margin-right: auto; /* 2 */
  @include breakpoint($bkpt-1024){
    max-width: $wrap-width; /* 1 */
    padding: 0;
  }
  @include breakpoint($bkpt-1600){
    max-width: $wrap-width_large; /* 1 */
  }
}

/// Image Replacement

@import "compass/css3/background-size";

@mixin bgnd-retina($file, $type) {
  $image: ($file + '.' + $type);
  background-image: image-url($image);
 
  @media only screen and (-webkit-min-device-pixel-ratio: 2)
  {
    $image2x: ($file + '@2x.' + $type);
    background-image: image-url($image2x);
    @include background-size(image-width($image) auto);
  }
}

@mixin background-image-retina($file, $type) {
  $image: ($file + '.' + $type);
  background-image: image-url($image);
  height: image-height($image);
  width: image-width($image);

  @media only screen and (-webkit-min-device-pixel-ratio: 2)
  {
    $image2x: ($file + '@2x.' + $type);
    background-image: image-url($image2x);
    @include background-size(image-width($image) auto);
  }
}

@mixin image-replacement($file, $type) {
  @include background-image-retina($file, $type);
  background-position: 0 0;
  background-repeat: no-repeat;
  text-indent: 1000%;
  white-space: nowrap;
  overflow: hidden;
  display: block;
}
@mixin header-replacement($file, $type) {
  $image: ($file + '.' + $type);
  background-image: image-url($image);
  height: image-height($image)/2;
  width: image-width($image)/2;
  background-position: 0 0;
  background-repeat: no-repeat;
  background-size: contain;
  text-indent: 100%;
  white-space: nowrap;
  overflow: hidden;
  display: block;
  @media only screen and (-webkit-min-device-pixel-ratio: 2)
  {
    $image2x: ($file + '@2x.' + $type);
    background-image: image-url($image2x);
    // @include background-size(image-width($image)/2 auto);
  }
}


/// Full Screen Background with ios fix
@mixin fullscreenbackground($image){
  $background-file-name: $image;
  background-image: image-url($background-file-name);
  background-repeat: no-repeat;
  background-position: center center;
  @include breakpoint($bkpt-1024){
    background-attachment: fixed;
    background-size: cover;
  }
  /* for background-size:cover replacement on iOS devices */
  @media only screen and (orientation: portrait) and (device-width: 320px), (device-width: 768px) {
    -webkit-background-size: auto 150%;
    background-attachment: scroll;
    background-position: top center;
  }
  @media only screen and (orientation: landscape) and (device-width: 320px), (device-width: 768px) {
    -webkit-background-size: 150% auto;
    background-attachment: scroll;
    background-position: top center;
  }
}

/// vertically centers element in its parent (needs position and height declaration)
@mixin vertical-align {
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  left: 0;
  right: 0;
  @include breakpoint($bkpt-768){
    position: relative;
  }
}
@mixin vertical-align-parent{
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}


/// Section Height
%fullheight{
  min-height: 100vh;
  @include vertical-align-parent;
  @include breakpoint($bkpt-ipad){
    height:  calc(100vh - 60px);
    min-height: 0;
  }
  @include breakpoint($bkpt-1024){
    // height: 100vh;
    min-height: 0;
    // min-height: 100vh;
    height:  calc(100vh);
  }
}
%peakheight{
  min-height: 70vh;
  @include vertical-align-parent;
  @include breakpoint($bkpt-768){
    min-height: 70vh;
    box-sizing: border-box;
    // min-height: 0;
    // height: 70vh;
    height: auto;
  }
}
%blogheight{
  min-height: 50vh;
  @include vertical-align-parent;
  @include breakpoint($bkpt-768){
    min-height: 85vh;
    box-sizing: border-box;
    // min-height: 0;
    height: auto;
  }
}

%halfheight{
  min-height: 50vh;
  @include vertical-align-parent;
  @include breakpoint($bkpt-1280){
    min-height: 40vh;
    box-sizing: border-box;
    // min-height: 0;
  }
}

%leader-sm-height{
  // min-height: 25vh;
  min-height: 350px;
  @include breakpoint($bkpt-768){
    // height: 25vh;
    box-sizing: border-box;
    // min-height: 0;
    height: 350px
  }
  @include breakpoint($bkpt-1600){
    height: 40vh;
    // min-height: 35vh;
  }
}
%leader-smr-height{
  // min-height: 25vh;
  min-height: 150px;
  @include breakpoint($bkpt-768){
    // height: 25vh;
    box-sizing: border-box;
    // min-height: 0;
    height: 150px
  }
}

%unheight{
  min-height: auto;
  @include breakpoint($bkpt-768){
    height: auto;
    min-height: auto;
  }
}


/// vertically align cards
@mixin vert-align{
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}

// responsive background-images

@mixin leader-bgi($filename){
  background-image: url(../images/#{$filename}_mobile.jpg);
  @include breakpoint($bkpt-768){
    background-image: url(../images/#{$filename}_sm.jpg);
  }
  @include breakpoint($bkpt-1024){
    background-image: url(../images/#{$filename}_med.jpg);
    &:before, &:after{    
      background-size: contain;
    }
  }
  @include breakpoint($bkpt-1600){
    background-image: url(../images/#{$filename}.jpg);
  }
  @include breakpoint($bkpt-1920){
    background-image: url(../images/#{$filename}_lg.jpg);
  }
}

/// Formating Utilities

@mixin beforeafter{
  content:"";
  display: block;
}


@mixin de-ul {
  margin: 0 0 1em 0;
  padding: 0;
  list-style-type: none;
  li{
    display: block;
  }    
}
@mixin reset-ul {
  display: block; 
  list-style-type: disc; 
  margin: 1em 0; 
  padding-left: 40px;
  li{
    display: list-item;
  }
}
@mixin reset-ol {
  display: block; 
  list-style-type: decimal; 
  margin: 1em 0; 
  padding-left: 40px;
  li{
    display: list-item;
  }
}


/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
  @if $self {
    &,
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  } @else {
    &:hover,
    &:active,
    &:focus {
      @content;
    }
  }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
  #{$context} & {
    @content;
  }
}


/// styling out whether the labels and inputs are stacked or side by side
@mixin label-style{
  @if $label-width == 100% {
    display: block;
    text-align: left;
  } @else {
    @include breakpoint($bkpt-1024){
      width: $label-width;
      float: left;
      text-align: right;
      height:2.5em;
      padding:0.25em 0.35em 0.25em 0;
      line-height:2em;
      margin:0;
    }
  }

}
@mixin form-field-editor-style{ // the input field
  @if $label-width == 100% {
    display: block;
  } @else {
    @include breakpoint($bkpt-1024){
      width: 100% - $label-width;
      float: left;
    }
  }
}

@mixin icon-social($image, $type){
  a {
    @include image-replacement($image, $type);
    display: inline-block;
  }
}