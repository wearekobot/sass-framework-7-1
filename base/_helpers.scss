// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
	clear: both;
	content: '';
	display: table;
}

/**
 * Main content containers
 * 1. Make the container full-width with a maximum width
 * 2. Center it in the viewport
 * 3. Leave some space on the edges, especially valuable on small screens
 */

.wrap{
	padding: 0 $mobile-padding;
	max-width: calc(100% - #{$mobile-padding*2} );
	width: 100%; /* 1 */
	margin-left: auto; /* 2 */
	margin-right: auto; /* 2 */
	@include breakpoint($bkpt-1024){
		max-width: $wrap-width; /* 1 */
		padding: 0 $internal-padding;
		// @include with-grid-settings($break,$column-width,$gutter-width,$mobile-padding) {
		  // @include container($susy); 
		// }
		// @include susy-grid-background; //This will show a grid if you unquote it
	}
	@include breakpoint($bkpt-1600){
		max-width: $wrap-width_large; /* 1 */
	}
	
}
/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *		See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
	overflow: hidden;
	padding: 0; /* 1 */
	text-indent: 101%;
	white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden { 
	border: 0;
	clip: rect(0 0 0 0);
	height: 1px;
	margin: -1px;
	overflow: hidden;
	padding: 0;
	position: absolute;
	width: 1px;
}


/**
 * Prevent scrolling on an element
 * Very usefull for preventing scroll on body when a mobile nav is activated
 */

.stuck {
	overflow: hidden;
	position: fixed;
	width: 100vw;
	height: 100vh;
}

.hidden{
	display: none !important;
}
.show{
	display: block !important;
}
.invisible{
	visibility: hidden;
}
